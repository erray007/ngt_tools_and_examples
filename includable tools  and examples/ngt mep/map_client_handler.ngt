/*
Created by erray.007
this script loads your online map to be read by your client
*/
//here we determine the boundaries of the map. Remember that you need to create a vector handle in the main script file of your game for the movement of the players
vector min,max;
//here we define the tiles with array
string[] tiles;
//now let's load our map data
void load_data(string data)
{
//We need to reset the tile here to avoid overlapping. If there are things in your game that you want to be removed when the map changes, write the codes that will remove them here.
tiles.resize(0);
//now let's split and load our data
string []lines=data.split("\r\n");
for(uint i=0; i<lines.length(); i++)
{
string[] words=lines[i].split(":");
if(words[0]=="minx"&&words.length()==2) min.x=string_to_number(words[1]);
if(words[0]=="maxx"&&words.length()==2) max.x=string_to_number(words[1]);
if(words[0]=="miny"&&words.length()==2) min.y=string_to_number(words[1]);
if(words[0]=="maxy"&&words.length()==2) max.y=string_to_number(words[1]);
if(words[0]=="minz"&&words.length()==2) min.z=string_to_number(words[1]);
if(words[0]=="maxz"&&words.length()==2) max.z=string_to_number(words[1]);
if(words[0]=="tile"&&words.length()==8)
{
tiles.insert_last(string_to_number(words[1])+":"+string_to_number(words[2])+":"+string_to_number(words[3])+":"+string_to_number(words[4])+":"+string_to_number(words[5])+":"+string_to_number(words[6])+":"+words[7]+"");
}
//You can add other functions included in the data here. Let's end the loop here for now
}//end_of_for
}//end of func
// Finally, let's get the tile type for our player on the client
string get_tile_type(int x, int y, int z)
{
string result;
for(uint i=0; i<this.tiles.length(); i++)
{
string[] parameters=this.tiles[i].split(":");
if(parameters.length()>5)
{
int minx=string_to_number(parameters[0]);
int maxx=string_to_number(parameters[1]);
int miny=string_to_number(parameters[2]);
int maxy=string_to_number(parameters[3]);
int minz=string_to_number(parameters[4]);
int maxz=string_to_number(parameters[5]);
if(minx>x)
{
continue;
}
if(minx<=x and maxx>=x and miny<=y and maxy>=y and minz<=z and maxz>=z and parameters.length()>6)
{
result=parameters[6];
}
}
}
return result;
}

